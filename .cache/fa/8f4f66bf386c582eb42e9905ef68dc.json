{"id":"node_modules/@pixi/filter-alpha/lib/filter-alpha.es.js","dependencies":[{"name":"C:\\Users\\olish\\sienmobile\\node_modules\\@pixi\\filter-alpha\\lib\\filter-alpha.es.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\olish\\sienmobile\\package.json","includedInParent":true,"mtime":1585253134647},{"name":"C:\\Users\\olish\\sienmobile\\node_modules\\@pixi\\filter-alpha\\package.json","includedInParent":true,"mtime":1585253134076},{"name":"@pixi/core","loc":{"line":8,"column":38},"parent":"C:\\Users\\olish\\sienmobile\\node_modules\\@pixi\\filter-alpha\\lib\\filter-alpha.es.js","resolved":"C:\\Users\\olish\\sienmobile\\node_modules\\@pixi\\core\\lib\\core.es.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlphaFilter = void 0;\n\nvar _core = require(\"@pixi/core\");\n\n/*!\n * @pixi/filter-alpha - v5.2.1\n * Compiled Tue, 28 Jan 2020 23:33:11 UTC\n *\n * @pixi/filter-alpha is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar fragment = \"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float uAlpha;\\n\\nvoid main(void)\\n{\\n   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;\\n}\\n\";\n/**\n * Simplest filter - applies alpha.\n *\n * Use this instead of Container's alpha property to avoid visual layering of individual elements.\n * AlphaFilter applies alpha evenly across the entire display object and any opaque elements it contains.\n * If elements are not opaque, they will blend with each other anyway.\n *\n * Very handy if you want to use common features of all filters:\n *\n * 1. Assign a blendMode to this filter, blend all elements inside display object with background.\n *\n * 2. To use clipping in display coordinates, assign a filterArea to the same container that has this filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\n\nvar AlphaFilter = /*@__PURE__*/function (Filter) {\n  function AlphaFilter(alpha) {\n    if (alpha === void 0) alpha = 1.0;\n    Filter.call(this, _core.defaultVertex, fragment, {\n      uAlpha: 1\n    });\n    this.alpha = alpha;\n  }\n\n  if (Filter) AlphaFilter.__proto__ = Filter;\n  AlphaFilter.prototype = Object.create(Filter && Filter.prototype);\n  AlphaFilter.prototype.constructor = AlphaFilter;\n  var prototypeAccessors = {\n    alpha: {\n      configurable: true\n    }\n  };\n  /**\n   * Coefficient for alpha multiplication\n   *\n   * @member {number}\n   * @default 1\n   */\n\n  prototypeAccessors.alpha.get = function () {\n    return this.uniforms.uAlpha;\n  };\n\n  prototypeAccessors.alpha.set = function (value) // eslint-disable-line require-jsdoc\n  {\n    this.uniforms.uAlpha = value;\n  };\n\n  Object.defineProperties(AlphaFilter.prototype, prototypeAccessors);\n  return AlphaFilter;\n}(_core.Filter);\n\nexports.AlphaFilter = AlphaFilter;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":0},"generated":{"line":36,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":13},"generated":{"line":36,"column":4}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":15}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":18}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":31}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":41}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":47}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":36,"column":49}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":4},"generated":{"line":37,"column":11}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":4},"generated":{"line":37,"column":22}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":16},"generated":{"line":37,"column":23}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":4},"generated":{"line":37,"column":28}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":27,"column":4},"generated":{"line":37,"column":30}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":21},"generated":{"line":38,"column":31}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":26,"column":24},"generated":{"line":38,"column":34}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":0}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":4}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":10}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":11}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":15}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":13},"generated":{"line":39,"column":16}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":20}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":14},"generated":{"line":39,"column":22}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":41}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":29},"generated":{"line":39,"column":43}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":39,"column":51}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":39},"generated":{"line":39,"column":53}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":41},"generated":{"line":40,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":41},"generated":{"line":40,"column":6}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":47},"generated":{"line":40,"column":12}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":49},"generated":{"line":40,"column":14}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":28,"column":39},"generated":{"line":41,"column":0}},{"source":"../src/AlphaFilter.js","name":"super","original":{"line":28,"column":8},"generated":{"line":41,"column":5}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":30,"column":8},"generated":{"line":42,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":30,"column":13},"generated":{"line":42,"column":9}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":30,"column":8},"generated":{"line":42,"column":14}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":30,"column":21},"generated":{"line":42,"column":17}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":30,"column":8},"generated":{"line":42,"column":22}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":60,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":60,"column":2}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":60,"column":20}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":8},"generated":{"line":60,"column":21}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":60,"column":26}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":8},"generated":{"line":60,"column":27}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":60,"column":30}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":8},"generated":{"line":60,"column":33}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":40,"column":4},"generated":{"line":60,"column":45}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":8},"generated":{"line":61,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":15},"generated":{"line":61,"column":11}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":20},"generated":{"line":61,"column":16}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":15},"generated":{"line":61,"column":24}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":29},"generated":{"line":61,"column":25}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":41,"column":8},"generated":{"line":61,"column":31}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":39,"column":4},"generated":{"line":62,"column":3}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":64,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":64,"column":2}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":64,"column":20}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":8},"generated":{"line":64,"column":21}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":64,"column":26}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":8},"generated":{"line":64,"column":27}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":64,"column":30}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":8},"generated":{"line":64,"column":33}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":14},"generated":{"line":64,"column":43}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":8},"generated":{"line":64,"column":48}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":19},"generated":{"line":64,"column":50}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":45,"column":4},"generated":{"line":65,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":8},"generated":{"line":66,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":13},"generated":{"line":66,"column":9}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":8},"generated":{"line":66,"column":17}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":22},"generated":{"line":66,"column":18}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":8},"generated":{"line":66,"column":24}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":31},"generated":{"line":66,"column":27}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":46,"column":8},"generated":{"line":66,"column":32}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":47,"column":5},"generated":{"line":67,"column":0}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":44,"column":4},"generated":{"line":67,"column":3}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":71,"column":1}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":33},"generated":{"line":71,"column":2}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":24},"generated":{"line":71,"column":14}},{"source":"../src/AlphaFilter.js","name":null,"original":{"line":21,"column":0},"generated":{"line":71,"column":15}}],"sources":{"../src/AlphaFilter.js":"import { Filter, defaultVertex } from '@pixi/core';\nimport fragment from './alpha.frag';\n\n/**\n * Simplest filter - applies alpha.\n *\n * Use this instead of Container's alpha property to avoid visual layering of individual elements.\n * AlphaFilter applies alpha evenly across the entire display object and any opaque elements it contains.\n * If elements are not opaque, they will blend with each other anyway.\n *\n * Very handy if you want to use common features of all filters:\n *\n * 1. Assign a blendMode to this filter, blend all elements inside display object with background.\n *\n * 2. To use clipping in display coordinates, assign a filterArea to the same container that has this filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nexport class AlphaFilter extends Filter\n{\n    /**\n     * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n     */\n    constructor(alpha = 1.0)\n    {\n        super(defaultVertex, fragment, { uAlpha: 1 });\n\n        this.alpha = alpha;\n    }\n\n    /**\n     * Coefficient for alpha multiplication\n     *\n     * @member {number}\n     * @default 1\n     */\n    get alpha()\n    {\n        return this.uniforms.uAlpha;\n    }\n\n    set alpha(value) // eslint-disable-line require-jsdoc\n    {\n        this.uniforms.uAlpha = value;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"ff1c6547aa6333be17edaf5bf692949a","cacheData":{"env":{}}}